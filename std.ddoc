BR =	<br>
DDOC_DITTO     = $(BR)$0
DDOC_SUMMARY   = $0$(P)
DDOC_DESCRIPTION = $0$(P)
DDOC_AUTHORS   = $(B Authors:)$(BR)$0$(P)
DDOC_BUGS      = $(RED BUGS:)$(BR)$0$(P)
DDOC_COPYRIGHT = $(B Copyright:)$(BR)$0$(P)
DDOC_DATE      = $(B Date:)$(BR)$0$(P)
DDOC_DEPRECATED = $(RED Deprecated:)$(BR)$0$(P)
DDOC_EXAMPLES  = $(B Examples:)$(BR)$0$(P)
DDOC_HISTORY   = $(B History:)$(BR)$0$(P)
DDOC_LICENSE   = $(B License:)$(BR)$0$(P)
DDOC_RETURNS   = $(B Returns:)$(BR)$0$(P)
DDOC_SEE_ALSO  = $(B See Also:)$(BR)$0$(P)
DDOC_STANDARDS = $(B Standards:)$(BR)$0$(P)
DDOC_THROWS    = $(B Throws:)$(BR)$0$(P)
DDOC_VERSION   = $(B Version:)$(BR)$0$(P)
DDOC_SECTION_H = $(B $0)$(BR)
DDOC_SECTION   = $0$(P)
DDOC_PARAMS    = $(B Parameters:)<table class=parms>$0</table>$(P)
DDOC_BLANKLINE	= $(P)

DDOC = <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<html lang='en'>

<!--
	Copyright (c) 1999-2010 by Digital Mars
	All Rights Reserved Written by Walter Bright
	http://www.digitalmars.com
  -->

<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" >
<title>$(TITLE) - D Programming Language - Digital Mars</title>
<link rel="stylesheet" type="text/css" href="css/style.css">

<script type="text/javascript">
function listanchors()
{
    if (typeof inhibitQuickIndex !== 'undefined') return;
    var a = document.getElementById("quickindex");
    if (!a) return;
    var newText = "";
    var hash = new Array;
    var n = 0;
    var values = new Array;
    // List all anchors.
    for (var i = 0; i < document.anchors.length; i++)
    {
        var a = document.anchors[i];
        var text = a.name;
        if (hash[text] > 0) continue;
        hash[text] = 1;
        values[n++] = a.name
    }

    values.sort();

    for(var i = 0; i < values.length; i++) {
        var a = values[i];
        newText += ' \x3Ca href="\x23' + a +
            '"\x3E\x3Cspan class="d_psymbol"\x3E' + a + '\x3C/span\x3E\x3C/a\x3E';
    }
    if (newText != "") newText = "\x3Cp\x3E\x3Cb\x3EJump to:\x3C/b\x3E" + newText + "\x3C/p\x3E";
    var a = document.getElementById("quickindex");
    a.innerHTML = newText;
}
</script>

<script src="js/hyphenate_selectively.js" type="text/javascript"></script>

</head>

<body onload="listanchors()" class='hyphenate'>

<div id="top">
	<div id="search-box">
		<form method="get" action="http://google.com/search">
			<img src="/images/search-left.gif" width="11" height="22" alt=""><input id="q" name="q"><input type="image" id="search-submit" name="submit" src="/images/search-button.gif">
			<input type="hidden" id="domains" name="domains" value="d-programming-language.org">
			<input type="hidden" id="sourceid" name="sourceid" value="google-search">
			<div id="search-dropdown">
				<select id="sitesearch" name="sitesearch" size="1">
					<option value="d-programming-language.org">Entire D $(VER) Site</option>
					<option value="d-programming-language.org/phobos">Library Reference</option>
					<option value="www.digitalmars.com/d/archives">Newsgroup Archives</option>
				</select>
			</div>
		</form>
	</div>
	<div id="header">
		<a href="/"><img id="logo" width="125" height="95" border="0" alt="D Logo" src="/images/dlogo.png"></a>
		<a id="d-language" href="/">D Programming Language $(VER)</a>
	</div>
</div>

<div id="navigation">
    $(TOP)
    $(NAVIGATION_PHOBOS)
</div>
<div id="content">
    <h1>$(TITLE)</h1>
    <div id=quickindex class=quickindex></div>
    $(BODY)
    $(GOOGLE_FOOTER)
</div>


<div id="copyright">
$(COPYRIGHT) |
Page generated by $(LINK2 http://www.digitalmars.com/d/2.0/ddoc.html, Ddoc).
</div>

</body>
</html>

GOOGLE_FOOTER=
<br><br>
<br><br>
<!-- Google ad -->
<script type="text/javascript"><!--
/**/google_ad_client = "pub-5628673096434613";
/**/google_ad_width = 728;
/**/google_ad_height = 90;
/**/google_ad_format = "728x90_as";
/**/google_ad_channel ="6203743411";
/**/google_page_url = document.location;
//--></script>
TOP=
<div class="navblock">
<form method="get" action="http://www.google.com/search">
<div id="searchbox">
<input name="q" size="10" value="RTL Search" onFocus='if(this.value == "RTL Search"){this.value="";}'>
<input type="hidden" name="domains" value="www.digitalmars.com">
<input type="hidden" name="sitesearch" value="www.digitalmars.com/d/2.0/phobos">
<input type="hidden" name="sourceid" value="google-search">
<input type="submit" name="submit" value="Go">
</div>
</form>
<div id="toctop">
    $(UL
	$(LI <a href="../index.html" title="D Programming Language">D</a>)
	$(LI <a href="../spec.html" title="D Language Specification">Language</a>)
	$(LI <a href="../phobos/index.html" title="D Runtime Library">Phobos</a>)
	$(LI <a href="../phobos-prerelease/index.html" title="D Runtime Library (prerelease)">Phobos (prerelease)</a>)
	$(LI <a href="../comparison.html" title="Language Comparisons">Comparisons</a>)
    )
</div>
</div>

NAVIGATION_PHOBOS=
<div class="navblock">
    $(UL
	$(LI <a href="object.html" title="root of object hierarchy">object</a>)
    )
    <h2><a href="index.html#std" title="D standard modules">std</a></h2>
    $(UL
	$(LI <a href="std_algorithm.html" title="General-purpose algorithms">std.algorithm</a>)
	$(LI <a href="std_array.html" title="Array functions">std.array</a>)
	$(LI <a href="std_ascii.html" title="Functions which operate on ASCII characters">std.ascii</a>)
	$(LI <a href="std_base64.html" title="Encode/decode base64 format">std.base64</a>)
	$(LI <a href="std_bigint.html" title="Arbitrary-precision ('bignum') arithmetic">std.bigint</a>)
	$(LI <a href="std_bitmanip.html" title="Bit-level manipulation">std.bitmanip</a>)
	$(LI <a href="std_compiler.html" title="Information about the D compiler implementation">std.compiler</a>)
	$(LI <a href="std_complex.html" title="Complex numbers">std.complex</a>)
	$(LI <a href="std_concurrency.html" title="Message Passing">std.concurrency</a>)
	$(LI <a href="std_container.html" title="Containers">std.container</a>)
	$(LI <a href="std_contracts.html" title="Think assert">std.contracts</a>)
	$(LI <a href="std_conv.html" title="Conversion of strings to integers">std.conv</a>)
	$(LI <a href="std_cpuid.html" title="CPU identification">std.cpuid</a>)
	$(LI <a href="std_ctype.html" title="Simple character classification">std.ctype</a>)
	$(LI <a href="std_date.html" title="Date and time functions">std.date</a>)
	$(LI <a href="std_datetime.html" title="Date and time-related types and functions">std.datetime</a>)
	$(LI <a href="std_demangle.html" title="Demangle D names">std.demangle</a>)
	$(LI <a href="std_encoding.html" title="Character and string encoding">std.encoding</a>)
	$(LI <a href="std_exception.html" title="Exceptions and error handling">std.exception</a>)
	$(LI <a href="std_file.html" title="Basic file operations">std.file</a>)
	$(LI <a href="std_format.html" title="Formatted conversions of values to strings">std.format</a>)
	$(LI <a href="std_functional.html" title="functional">std.functional</a>)
	$(LI <a href="std_getopt.html" title="Command line options">std.getopt</a>)
	$(LI <a href="std_gregorian.html" title="Gregorian Calendar">std.gregorian</a>)
	$(LI <a href="std_json.html" title="JSON reader">std.json</a>)
	$(LI <a href="std_math.html" title="the usual math functions">std.math</a>)
	$(LI <a href="std_mathspecial.html" title="mathematical special functions">std.mathspecial</a>)
	$(LI <a href="std_md5.html" title="Compute MD5 digests">std.md5</a>)
	$(LI <a href="std_metastrings.html" title="Metaprogramming with strings">std.metastrings</a>)
	$(LI <a href="std_mmfile.html" title="Memory mapped files">std.mmfile</a>)
	$(LI <a href="std_numeric.html" title="Numeric algorithms">std.numeric</a>)
	$(LI <a href="std_outbuffer.html" title="Assemble data into an array of bytes">std.outbuffer</a>)
	$(LI <a href="std_parallelism.html" title="High-level primitives for SMP parallelism">std.parallelism</a>)
	$(LI <a href="std_path.html" title="Manipulate file names, path names, etc.">std.path</a>)
	$(LI <a href="std_process.html" title="Create/destroy processes">std.process</a>)
	$(LI <a href="std_random.html" title="Random number generation">std.random</a>)
	$(LI <a href="std_range.html" title="Ranges">std.range</a>)
	$(LI <a href="std_regex.html" title="regular expressions">std.regex</a>)
	$(LI <a href="std_regexp.html" title="regular expressions (deprecated)">std.regexp</a>)
	$(LI <a href="std_signals.html" title="Signals">std.signals</a>)
	$(LI <a href="std_socket.html" title="Sockets">std.socket</a>)
	$(LI <a href="std_socketstream.html" title="Stream for a blocking, connected Socket">std.socketstream</a>)
	$(LI <a href="std_stdint.html" title="Integral types for various purposes">std.stdint</a>)
	$(LI <a href="std_stdio.html" title="Standard I/O">std.stdio</a>)
	$(LI <a href="std_cstream.html" title="Stream I/O">std.cstream</a>)
	$(LI <a href="std_stream.html" title="Stream I/O">std.stream</a>)
	$(LI <a href="std_string.html" title="Basic string operations">std.string</a>)
	$(LI <a href="std_system.html" title="Inquire about the CPU, operating system">std.system</a>)
	$(LI <a href="std_traits.html" title="Type traits">std.traits</a>)
	$(LI <a href="std_typecons.html" title="Type constructors">std.typecons</a>)
	$(LI <a href="std_typetuple.html" title="Type tuples">std.typetuple</a>)
	$(LI <a href="std_uni.html" title="Unicode classification">std.uni</a>)
	$(LI <a href="std_uri.html" title="Encode and decode Uniform Resource Identifiers (URIs)">std.uri</a>)
	$(LI <a href="std_utf.html" title="Encode and decode utf character encodings">std.utf</a>)
	$(LI <a href="std_variant.html" title="Stores all types in a uniform, dynamically-checked representation">std.variant</a>)
	$(LI <a href="std_xml.html" title="XML file processing">std.xml</a>)
	$(LI <a href="std_zip.html" title="Read/write zip archives">std.zip</a>)
	$(LI <a href="std_zlib.html" title="Compression / Decompression of data">std.zlib</a>)
	$(LI <a href="std_c_fenv.html" title="Floating point environment">std.c.fenv</a>)
	$(LI <a href="std_c_locale.html" title="Locale">std.c.locale</a>)
	$(LI <a href="std_c_math.html" title="Math">std.c.math</a>)
	$(LI <a href="std_c_process.html" title="Process">std.c.process</a>)
	$(LI <a href="std_c_stdarg.html" title="Variadic arguments">std.c.stdarg</a>)
	$(LI <a href="std_c_stddef.html" title="Standard definitions">std.c.stddef</a>)
	$(LI <a href="std_c_stdio.html" title="Standard I/O">std.c.stdio</a>)
	$(LI <a href="std_c_stdlib.html" title="Standard library">std.c.stdlib</a>)
	$(LI <a href="std_c_string.html" title="Strings">std.c.string</a>)
	$(LI <a href="std_c_time.html" title="Time">std.c.time</a>)
	$(LI <a href="std_c_wcharh.html" title="Wide characters">std.c.wcharh</a>)
	$(LI <a href="std_net_isemail.html" title="Validate e-mail addresses">std.net.isemail</a>)
	$(LI <a href="std_windows_charset.html" title="Conversion to/from Windows character sets">std.windows.charset</a>)
	$(LI <a href="index.html#std_windows" title="Modules specific to Windows">std.windows</a>)
	$(LI <a href="index.html#std_linux" title="Modules specific to Windows">std.linux</a>)
	$(LI <a href="index.html#std_c_windows" title="C Windows API">std.c.windows</a>)
	$(LI <a href="index.html#std_c_linux" title="C Linux API">std.c.linux</a>)
    )
    <h2><a href="index.html#etc" title="D etc modules">etc</a></h2>
    $(UL
	$(LI <a href="etc_c_curl.html" title="Interface to libcurl library">etc.c.curl</a>)
	$(LI <a href="etc_c_zlib.html" title="Interface to zlib library">etc.c.zlib</a>)
    )
    <h2><a href="index.html#core" title="D core modules">core</a></h2>
    $(UL
	$(LI <a href="core_atomic.html" title="Atomic operations">core.atomic</a>)
	$(LI <a href="core_bitop.html" title="Bitwise operations">core.bitop</a>)
	$(LI <a href="core_cpuid.html" title="CPU identification">core.cpuid</a>)
	$(LI <a href="core_exception.html" title="Root of exception hierarchy">core.exception</a>)
	$(LI <a href="core_memory.html" title="Interface to memory management">core.memory</a>)
	$(LI <a href="core_runtime.html" title="Interface to D runtime library internals">core.runtime</a>)
	$(LI <a href="core_thread.html" title="Thread management">core.thread</a>)
	$(LI <a href="core_time.html" title="Core time functionality">core.time</a>)
	$(LI <a href="core_vararg.html" title="Variable function arguments">core.vararg</a>)
	$(LI <a href="core_sync_barrier.html" title="Synchronizing progress of a group of threads">core.sync.barrier</a>)
	$(LI <a href="core_sync_condition.html" title="Synchronized condition checking">core.sync.condition</a>)
	$(LI <a href="core_sync_config.html" title="Stuff for core.sync">core.sync.config</a>)
	$(LI <a href="core_sync_exception.html" title="SyncException">core.sync.exception</a>)
	$(LI <a href="core_sync_mutex.html" title="Mutexes">core.sync.mutex</a>)
	$(LI <a href="core_sync_rwmutex.html" title="R/W mutually exclusive access">core.sync.rwmutex</a>)
	$(LI <a href="core_sync_semaphore.html" title="Semaphores">core.sync.semaphore</a>)
    )
</div>

RED    = <span style="color:red">$0</span>
GREEN  = <span style="color:green">$0</span>
BLUE   = <span style="color:blue">$0</span>
YELLOW = <span style="color:yellow">$0</span>
BLACK  = <span style="color:black">$0</span>
WHITE  = <span style="color:white">$0</span>

D_COMMENT = <span class="d_comment">$0</span>
D_STRING  = <span class="d_string">$0</span>
D_KEYWORD = <span class="d_keyword">$0</span>
D_PSYMBOL = <span class="d_psymbol">$0</span>
D_PARAM   = <span class="d_param">$0</span>
RPAREN = )
LPAREN = (
LESS = &lt;
GREATER = &gt;
WEB = $(LINK2 http://$1,$2)
LUCKY = $(WEB
google.com/search?btnI=I%27m+Feeling+Lucky&amp;ie=UTF-8&amp;oe=UTF-8&amp;q=$0,$0)
D = <font face=Courier><b>$0</b></font>
D = <span class="d_inlinecode">$0</span>
BIGOH = <b><i>&Omicron;</i>(</b>$(D $0)<b><i>)</i></b>
GLOSSARY = $(LINK2 ../glossary.html#$0, $0)

DDOC_PSYMBOL = <a name="$0"></a><span class="ddoc_psymbol">$0</span>
DDOC_DECL  = <dt class="d_decl">$0</dt>
XREF = <a href="std_$1.html#$2">$(D std.$1.$2)</a>
CXREF = <a href="core_$1.html#$2">$(D core.$1.$2)</a>
LREF = <a href="#$1">$(D $1)</a>
BUGZILLA = $(LINK2 http://d.puremagic.com/issues/show_bug.cgi?id=$0, Bugzilla $0)
PRE = <pre>$0</pre>
PHOBOSSRC=$(LINK2 https://github.com/D-Programming-Language/phobos/blob/master/$0, $0)
DRUNTIMESRC=$(LINK2 https://github.com/D-Programming-Language/druntime/blob/master/src/$0, $0)

BOOKTABLE = <center><table cellspacing=0 cellpadding=5 class=book><caption>$1</caption>$2</table></center>
LEADINGROW = <tr class=leadingrow><td colspan=2><b><em>&nbsp;&nbsp;&nbsp;&nbsp;$0</em></b></td></tr>
TABLE = <table cellspacing=0 cellpadding=5><caption>$1</caption>$2</table>
TD = <td valign=top>$0</td>
TDNW = <td valign=top class="donthyphenate">$0</td>
SUB = <sub>$0</sub>

COPYRIGHT= Copyright &copy; 1999-$(YEAR) by Digital Mars, All Rights Reserved

